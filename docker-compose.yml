services:
  postgres:
    build:
      context: ./postgres
      dockerfile: Dockerfile
    container_name: velpharma-db
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "5434:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init:/docker-entrypoint-initdb.d
      - ./backups:/backups
      - ./data:/data  # Mount for CSV/data files
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    networks:
      - velpharma-network
    # Resource limits (adjust based on your system)
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G
    # PostgreSQL performance tuning
    shm_size: 256mb
    command: >
      postgres
      -c shared_buffers=512MB
      -c effective_cache_size=1536MB
      -c maintenance_work_mem=128MB
      -c checkpoint_completion_target=0.9
      -c wal_buffers=16MB
      -c default_statistics_target=100
      -c random_page_cost=1.1
      -c effective_io_concurrency=200
      -c work_mem=16MB
      -c min_wal_size=1GB
      -c max_wal_size=4GB
      -c max_worker_processes=4
      -c max_parallel_workers_per_gather=2
      -c max_parallel_workers=4
      -c max_parallel_maintenance_workers=2

  # PgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: velpharma-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@velpharma.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - velpharma-network
    depends_on:
      postgres:
        condition: service_healthy

  # Backend service (placeholder for future)
  # backend:
  #   build:
  #     context: ./backend
  #     dockerfile: Dockerfile
  #   container_name: velpharma-backend
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #   environment:
  #     DATABASE_URL: postgresql://postgres:changeme@postgres:5432/velpdevdb
  #   ports:
  #     - "3000:3000"
  #   networks:
  #     - velpharma-network

  # Frontend service (placeholder for future)
  # frontend:
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile
  #   container_name: velpharma-frontend
  #   depends_on:
  #     - backend
  #   ports:
  #     - "8080:80"
  #   networks:
  #     - velpharma-network

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  velpharma-network:
    driver: bridge
